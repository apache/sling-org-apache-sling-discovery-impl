<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.sling</groupId>
        <artifactId>sling-bundle-parent</artifactId>
        <version>52</version>
        <relativePath />
    </parent>

    <artifactId>org.apache.sling.discovery.impl</artifactId>
    <version>1.2.13-SNAPSHOT</version>

    <name>Apache Sling Resource-Based Discovery Service</name>
    <description>Implementation of Apache Sling Discovery based on Sling Resource providing a ClusterView through resource-clustering (eg jackrabbit clustering) and a TopologyView through HTTP POST heartbeats announcing sub-topologies to each other.</description>

    <scm>
        <connection>scm:git:https://gitbox.apache.org/repos/asf/sling-org-apache-sling-discovery-impl.git</connection>
        <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/sling-org-apache-sling-discovery-impl.git</developerConnection>
        <url>https://github.com/apache/sling-org-apache-sling-discovery-impl.git</url>
    </scm>

    <properties>
        <jackrabbit.version>2.20.16</jackrabbit.version>
        <!-- by default Slow tests are excluded - use -PincludeSlowTests to include them -->
        <sling.excluded.surefire.groups>org.apache.sling.commons.testing.junit.categories.Slow</sling.excluded.surefire.groups>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <redirectTestOutputToFile>false</redirectTestOutputToFile>
                    <argLine>-Xmx2048m ${jacoco.ut.command}</argLine>
                    <excludedGroups>${sling.excluded.surefire.groups}</excludedGroups>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!-- when -PincludeSlowTests is set, the Slow tests should also be executed, 
                hence unsetting the category excludes 'sling.excluded.surefire.groups' to 
                achieve that. -->
            <id>includeSlowTests</id>
            <properties>
                <sling.excluded.surefire.groups />
            </properties>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
	        <version>1.6.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.service.component.annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.service.metatype.annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.framework</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.service.component</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.service.http</artifactId>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.jcr.api</artifactId>
			<version>2.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.jcr</groupId>
			<artifactId>jcr</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.commons.osgi</artifactId>
			<version>2.4.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.settings</artifactId>
			<version>1.2.2</version>
            <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.discovery.api</artifactId>
			<version>1.0.0</version>
            <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.discovery.commons</artifactId>
			<version>1.0.28</version>
            <scope>provided</scope>
		</dependency>
        <!-- besides including discovery.commons' normal jar above, 
              for testing a few test helper classes are also reused.
              in order to achieve that, also adding a test/test-jar dependency: --> 
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.discovery.commons</artifactId>
            <version>1.0.28</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.discovery.base</artifactId>
			<version>2.0.14</version>
            <scope>provided</scope>
		</dependency>
        <!-- besides including discovery.base' normal jar above, 
              for testing a few test helper classes are also reused.
              in order to achieve that, also adding a test/test-jar dependency: --> 
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.discovery.base</artifactId>
            <version>2.0.14</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.api</artifactId>
			<version>2.11.0</version>
            <scope>provided</scope>
		</dependency>
        <dependency>
        	<groupId>org.apache.sling</groupId>
        	<artifactId>org.apache.sling.commons.scheduler</artifactId>
        	<version>2.5.2</version>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.webconsole</artifactId>
			<version>3.0.0</version>
            <scope>provided</scope>
		</dependency>
	    <dependency>
	      <groupId>org.eclipse.jetty</groupId>
	      <artifactId>jetty-servlet</artifactId>
	      <version>8.1.2.v20120308</version>
	      <scope>test</scope>
	    </dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
		</dependency>
      <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit-addons</groupId>
            <artifactId>junit-addons</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
        	<groupId>org.apache.sling</groupId>
        	<artifactId>org.apache.sling.commons.testing</artifactId>
        	<version>2.0.26</version>
        	<scope>test</scope>
            <exclusions>
                <!-- slf4j simple implementation logs INFO + higher to stdout (we don't want that behaviour) -->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
                <!--  also excluding jcl-over-slf4j as we need a newer vesion of this which is compatible with slf4j 1.6 -->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--
            Use the following Jackrabbit modules at 2.20.16
            or higher to make build work on Java 9+.
            See JCR-4179 and JCR-4278.
        -->
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-jcr-commons</artifactId>
            <version>${jackrabbit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-spi-commons</artifactId>
            <version>${jackrabbit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-core</artifactId>
            <version>${jackrabbit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Tests use persistence on derby -->
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.14.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
            <scope>test</scope>
        </dependency>

        <!-- using log4j under slf4j to allow fine-grained logging config (see src/test/resources/log4j.properties) -->
        <dependency>
        	<groupId>org.slf4j</groupId>
        	<artifactId>slf4j-log4j12</artifactId>
        	<version>1.7.5</version>
        	<scope>test</scope>
        </dependency>
        <dependency>
        	<groupId>org.apache.sling</groupId>
        	<artifactId>org.apache.sling.jcr.resource</artifactId>
        	<version>2.3.8</version>
        	<scope>test</scope>
        </dependency>
	    <dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.13</version>
			<scope>test</scope>
	    </dependency>
        <dependency>
        	<groupId>org.apache.sling</groupId>
        	<artifactId>org.apache.sling.commons.threads</artifactId>
        	<version>3.1.0</version>
        	<scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.testing.tools</artifactId>
            <version>1.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.testing.sling-mock.junit4</artifactId>
            <version>3.5.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
